// source: google/privacy/dlp/v2/storage.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.google.privacy.dlp.v2.BigQueryField', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.BigQueryKey', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.BigQueryOptions', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.BigQueryOptions.SampleMethod', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.BigQueryTable', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CloudStorageFileSet', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CloudStorageOptions', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CloudStorageOptions.SampleMethod', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CloudStoragePath', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.AdjustmentCase', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.TypeCase', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.Dictionary', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.SourceCase', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.Regex', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.CustomInfoType.TypeCase', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.DatastoreKey', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.DatastoreOptions', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.EntityId', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.FieldId', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.FileType', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.InfoType', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.Key', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.Key.PathElement', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.Key.PathElement.IdTypeCase', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.KindExpression', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.Likelihood', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.PartitionId', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.RecordKey', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.RecordKey.TypeCase', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.StorageConfig', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.StorageConfig.TypeCase', null, global);
goog.exportSymbol('proto.google.privacy.dlp.v2.StoredType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.InfoType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.InfoType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.InfoType.displayName = 'proto.google.privacy.dlp.v2.InfoType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.StoredType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.StoredType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.StoredType.displayName = 'proto.google.privacy.dlp.v2.StoredType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.privacy.dlp.v2.CustomInfoType.repeatedFields_, proto.google.privacy.dlp.v2.CustomInfoType.oneofGroups_);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.oneofGroups_);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType.Dictionary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType.Dictionary';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.repeatedFields_, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType.Regex, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.Regex.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType.Regex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.oneofGroups_);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.oneofGroups_);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.displayName = 'proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.FieldId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.FieldId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.FieldId.displayName = 'proto.google.privacy.dlp.v2.FieldId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.PartitionId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.PartitionId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.PartitionId.displayName = 'proto.google.privacy.dlp.v2.PartitionId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.KindExpression = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.KindExpression, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.KindExpression.displayName = 'proto.google.privacy.dlp.v2.KindExpression';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.DatastoreOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.DatastoreOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.DatastoreOptions.displayName = 'proto.google.privacy.dlp.v2.DatastoreOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CloudStorageOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.privacy.dlp.v2.CloudStorageOptions.repeatedFields_, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CloudStorageOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CloudStorageOptions.displayName = 'proto.google.privacy.dlp.v2.CloudStorageOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.displayName = 'proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CloudStorageFileSet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CloudStorageFileSet.displayName = 'proto.google.privacy.dlp.v2.CloudStorageFileSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.CloudStoragePath = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.CloudStoragePath, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.CloudStoragePath.displayName = 'proto.google.privacy.dlp.v2.CloudStoragePath';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.BigQueryOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.privacy.dlp.v2.BigQueryOptions.repeatedFields_, null);
};
goog.inherits(proto.google.privacy.dlp.v2.BigQueryOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.BigQueryOptions.displayName = 'proto.google.privacy.dlp.v2.BigQueryOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.StorageConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.privacy.dlp.v2.StorageConfig.oneofGroups_);
};
goog.inherits(proto.google.privacy.dlp.v2.StorageConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.StorageConfig.displayName = 'proto.google.privacy.dlp.v2.StorageConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.displayName = 'proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.BigQueryKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.BigQueryKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.BigQueryKey.displayName = 'proto.google.privacy.dlp.v2.BigQueryKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.DatastoreKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.DatastoreKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.DatastoreKey.displayName = 'proto.google.privacy.dlp.v2.DatastoreKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.Key = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.privacy.dlp.v2.Key.repeatedFields_, null);
};
goog.inherits(proto.google.privacy.dlp.v2.Key, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.Key.displayName = 'proto.google.privacy.dlp.v2.Key';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.Key.PathElement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.privacy.dlp.v2.Key.PathElement.oneofGroups_);
};
goog.inherits(proto.google.privacy.dlp.v2.Key.PathElement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.Key.PathElement.displayName = 'proto.google.privacy.dlp.v2.Key.PathElement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.RecordKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.privacy.dlp.v2.RecordKey.oneofGroups_);
};
goog.inherits(proto.google.privacy.dlp.v2.RecordKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.RecordKey.displayName = 'proto.google.privacy.dlp.v2.RecordKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.BigQueryTable = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.BigQueryTable, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.BigQueryTable.displayName = 'proto.google.privacy.dlp.v2.BigQueryTable';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.BigQueryField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.BigQueryField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.BigQueryField.displayName = 'proto.google.privacy.dlp.v2.BigQueryField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.privacy.dlp.v2.EntityId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.privacy.dlp.v2.EntityId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.privacy.dlp.v2.EntityId.displayName = 'proto.google.privacy.dlp.v2.EntityId';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.InfoType.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.InfoType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.InfoType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.InfoType.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.InfoType}
 */
proto.google.privacy.dlp.v2.InfoType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.InfoType;
  return proto.google.privacy.dlp.v2.InfoType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.InfoType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.InfoType}
 */
proto.google.privacy.dlp.v2.InfoType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.InfoType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.InfoType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.InfoType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.InfoType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.InfoType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.InfoType} returns this
 */
proto.google.privacy.dlp.v2.InfoType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.StoredType.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.StoredType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.StoredType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.StoredType.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.StoredType}
 */
proto.google.privacy.dlp.v2.StoredType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.StoredType;
  return proto.google.privacy.dlp.v2.StoredType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.StoredType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.StoredType}
 */
proto.google.privacy.dlp.v2.StoredType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.StoredType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.StoredType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.StoredType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.StoredType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.StoredType.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.StoredType} returns this
 */
proto.google.privacy.dlp.v2.StoredType.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp create_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.privacy.dlp.v2.StoredType.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.privacy.dlp.v2.StoredType} returns this
*/
proto.google.privacy.dlp.v2.StoredType.prototype.setCreateTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.StoredType} returns this
 */
proto.google.privacy.dlp.v2.StoredType.prototype.clearCreateTime = function() {
  return this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StoredType.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.privacy.dlp.v2.CustomInfoType.repeatedFields_ = [7];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.privacy.dlp.v2.CustomInfoType.oneofGroups_ = [[2,3,4,5]];

/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.CustomInfoType.TypeCase = {
  TYPE_NOT_SET: 0,
  DICTIONARY: 2,
  REGEX: 3,
  SURROGATE_TYPE: 4,
  STORED_TYPE: 5
};

/**
 * @return {proto.google.privacy.dlp.v2.CustomInfoType.TypeCase}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.getTypeCase = function() {
  return /** @type {proto.google.privacy.dlp.v2.CustomInfoType.TypeCase} */(jspb.Message.computeOneofCase(this, proto.google.privacy.dlp.v2.CustomInfoType.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.toObject = function(includeInstance, msg) {
  var f, obj = {
    infoType: (f = msg.getInfoType()) && proto.google.privacy.dlp.v2.InfoType.toObject(includeInstance, f),
    likelihood: jspb.Message.getFieldWithDefault(msg, 6, 0),
    dictionary: (f = msg.getDictionary()) && proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.toObject(includeInstance, f),
    regex: (f = msg.getRegex()) && proto.google.privacy.dlp.v2.CustomInfoType.Regex.toObject(includeInstance, f),
    surrogateType: (f = msg.getSurrogateType()) && proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.toObject(includeInstance, f),
    storedType: (f = msg.getStoredType()) && proto.google.privacy.dlp.v2.StoredType.toObject(includeInstance, f),
    detectionRulesList: jspb.Message.toObjectList(msg.getDetectionRulesList(),
    proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType}
 */
proto.google.privacy.dlp.v2.CustomInfoType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType;
  return proto.google.privacy.dlp.v2.CustomInfoType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType}
 */
proto.google.privacy.dlp.v2.CustomInfoType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.InfoType;
      reader.readMessage(value,proto.google.privacy.dlp.v2.InfoType.deserializeBinaryFromReader);
      msg.setInfoType(value);
      break;
    case 6:
      var value = /** @type {!proto.google.privacy.dlp.v2.Likelihood} */ (reader.readEnum());
      msg.setLikelihood(value);
      break;
    case 2:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.Dictionary;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.deserializeBinaryFromReader);
      msg.setDictionary(value);
      break;
    case 3:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.Regex;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.Regex.deserializeBinaryFromReader);
      msg.setRegex(value);
      break;
    case 4:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.deserializeBinaryFromReader);
      msg.setSurrogateType(value);
      break;
    case 5:
      var value = new proto.google.privacy.dlp.v2.StoredType;
      reader.readMessage(value,proto.google.privacy.dlp.v2.StoredType.deserializeBinaryFromReader);
      msg.setStoredType(value);
      break;
    case 7:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.deserializeBinaryFromReader);
      msg.addDetectionRules(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoType();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.InfoType.serializeBinaryToWriter
    );
  }
  f = message.getLikelihood();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getDictionary();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.serializeBinaryToWriter
    );
  }
  f = message.getRegex();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.Regex.serializeBinaryToWriter
    );
  }
  f = message.getSurrogateType();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.serializeBinaryToWriter
    );
  }
  f = message.getStoredType();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.privacy.dlp.v2.StoredType.serializeBinaryToWriter
    );
  }
  f = message.getDetectionRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.oneofGroups_ = [[1,3]];

/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.SourceCase = {
  SOURCE_NOT_SET: 0,
  WORD_LIST: 1,
  CLOUD_STORAGE_PATH: 3
};

/**
 * @return {proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.SourceCase}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.getSourceCase = function() {
  return /** @type {proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.SourceCase} */(jspb.Message.computeOneofCase(this, proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.toObject = function(includeInstance, msg) {
  var f, obj = {
    wordList: (f = msg.getWordList()) && proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.toObject(includeInstance, f),
    cloudStoragePath: (f = msg.getCloudStoragePath()) && proto.google.privacy.dlp.v2.CloudStoragePath.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType.Dictionary;
  return proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.deserializeBinaryFromReader);
      msg.setWordList(value);
      break;
    case 3:
      var value = new proto.google.privacy.dlp.v2.CloudStoragePath;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CloudStoragePath.deserializeBinaryFromReader);
      msg.setCloudStoragePath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWordList();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.serializeBinaryToWriter
    );
  }
  f = message.getCloudStoragePath();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.privacy.dlp.v2.CloudStoragePath.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.toObject = function(includeInstance, msg) {
  var f, obj = {
    wordsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList;
  return proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addWords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWordsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string words = 1;
 * @return {!Array<string>}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.prototype.getWordsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.prototype.setWordsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.prototype.addWords = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList.prototype.clearWordsList = function() {
  return this.setWordsList([]);
};


/**
 * optional WordList word_list = 1;
 * @return {?proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.getWordList = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.WordList|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.setWordList = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.clearWordList = function() {
  return this.setWordList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.hasWordList = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CloudStoragePath cloud_storage_path = 3;
 * @return {?proto.google.privacy.dlp.v2.CloudStoragePath}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.getCloudStoragePath = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CloudStoragePath} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CloudStoragePath, 3));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CloudStoragePath|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.setCloudStoragePath = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Dictionary} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.clearCloudStoragePath = function() {
  return this.setCloudStoragePath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Dictionary.prototype.hasCloudStoragePath = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.Regex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Regex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex.toObject = function(includeInstance, msg) {
  var f, obj = {
    pattern: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Regex}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType.Regex;
  return proto.google.privacy.dlp.v2.CustomInfoType.Regex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Regex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Regex}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPattern(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.Regex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.Regex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPattern();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string pattern = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex.prototype.getPattern = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.Regex} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.Regex.prototype.setPattern = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType}
 */
proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType;
  return proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType}
 */
proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.TypeCase = {
  TYPE_NOT_SET: 0,
  HOTWORD_RULE: 1
};

/**
 * @return {proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.TypeCase}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.prototype.getTypeCase = function() {
  return /** @type {proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.TypeCase} */(jspb.Message.computeOneofCase(this, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    hotwordRule: (f = msg.getHotwordRule()) && proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule;
  return proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.deserializeBinaryFromReader);
      msg.setHotwordRule(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHotwordRule();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.toObject = function(includeInstance, msg) {
  var f, obj = {
    windowBefore: jspb.Message.getFieldWithDefault(msg, 1, 0),
    windowAfter: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity;
  return proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWindowBefore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWindowAfter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWindowBefore();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getWindowAfter();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 window_before = 1;
 * @return {number}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.prototype.getWindowBefore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.prototype.setWindowBefore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 window_after = 2;
 * @return {number}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.prototype.getWindowAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.prototype.setWindowAfter = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.AdjustmentCase = {
  ADJUSTMENT_NOT_SET: 0,
  FIXED_LIKELIHOOD: 1,
  RELATIVE_LIKELIHOOD: 2
};

/**
 * @return {proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.AdjustmentCase}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.getAdjustmentCase = function() {
  return /** @type {proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.AdjustmentCase} */(jspb.Message.computeOneofCase(this, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.toObject = function(includeInstance, msg) {
  var f, obj = {
    fixedLikelihood: jspb.Message.getFieldWithDefault(msg, 1, 0),
    relativeLikelihood: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment;
  return proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.privacy.dlp.v2.Likelihood} */ (reader.readEnum());
      msg.setFixedLikelihood(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRelativeLikelihood(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.google.privacy.dlp.v2.Likelihood} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional Likelihood fixed_likelihood = 1;
 * @return {!proto.google.privacy.dlp.v2.Likelihood}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.getFixedLikelihood = function() {
  return /** @type {!proto.google.privacy.dlp.v2.Likelihood} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.privacy.dlp.v2.Likelihood} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.setFixedLikelihood = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.clearFixedLikelihood = function() {
  return jspb.Message.setOneofField(this, 1, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.hasFixedLikelihood = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 relative_likelihood = 2;
 * @return {number}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.getRelativeLikelihood = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.setRelativeLikelihood = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.clearRelativeLikelihood = function() {
  return jspb.Message.setOneofField(this, 2, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.prototype.hasRelativeLikelihood = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    hotwordRegex: (f = msg.getHotwordRegex()) && proto.google.privacy.dlp.v2.CustomInfoType.Regex.toObject(includeInstance, f),
    proximity: (f = msg.getProximity()) && proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.toObject(includeInstance, f),
    likelihoodAdjustment: (f = msg.getLikelihoodAdjustment()) && proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule;
  return proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.Regex;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.Regex.deserializeBinaryFromReader);
      msg.setHotwordRegex(value);
      break;
    case 2:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.deserializeBinaryFromReader);
      msg.setProximity(value);
      break;
    case 3:
      var value = new proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.deserializeBinaryFromReader);
      msg.setLikelihoodAdjustment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHotwordRegex();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.Regex.serializeBinaryToWriter
    );
  }
  f = message.getProximity();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity.serializeBinaryToWriter
    );
  }
  f = message.getLikelihoodAdjustment();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment.serializeBinaryToWriter
    );
  }
};


/**
 * optional Regex hotword_regex = 1;
 * @return {?proto.google.privacy.dlp.v2.CustomInfoType.Regex}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.getHotwordRegex = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CustomInfoType.Regex} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.Regex, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CustomInfoType.Regex|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.setHotwordRegex = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.clearHotwordRegex = function() {
  return this.setHotwordRegex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.hasHotwordRegex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Proximity proximity = 2;
 * @return {?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.getProximity = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity, 2));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.Proximity|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.setProximity = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.clearProximity = function() {
  return this.setProximity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.hasProximity = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional LikelihoodAdjustment likelihood_adjustment = 3;
 * @return {?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.getLikelihoodAdjustment = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment, 3));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.LikelihoodAdjustment|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.setLikelihoodAdjustment = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.clearLikelihoodAdjustment = function() {
  return this.setLikelihoodAdjustment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule.prototype.hasLikelihoodAdjustment = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional HotwordRule hotword_rule = 1;
 * @return {?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.prototype.getHotwordRule = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.HotwordRule|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.prototype.setHotwordRule = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.prototype.clearHotwordRule = function() {
  return this.setHotwordRule(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule.prototype.hasHotwordRule = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional InfoType info_type = 1;
 * @return {?proto.google.privacy.dlp.v2.InfoType}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.getInfoType = function() {
  return /** @type{?proto.google.privacy.dlp.v2.InfoType} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.InfoType, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.InfoType|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.prototype.setInfoType = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.clearInfoType = function() {
  return this.setInfoType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.hasInfoType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Likelihood likelihood = 6;
 * @return {!proto.google.privacy.dlp.v2.Likelihood}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.getLikelihood = function() {
  return /** @type {!proto.google.privacy.dlp.v2.Likelihood} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.google.privacy.dlp.v2.Likelihood} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.setLikelihood = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional Dictionary dictionary = 2;
 * @return {?proto.google.privacy.dlp.v2.CustomInfoType.Dictionary}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.getDictionary = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CustomInfoType.Dictionary} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.Dictionary, 2));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CustomInfoType.Dictionary|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.prototype.setDictionary = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.privacy.dlp.v2.CustomInfoType.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.clearDictionary = function() {
  return this.setDictionary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.hasDictionary = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Regex regex = 3;
 * @return {?proto.google.privacy.dlp.v2.CustomInfoType.Regex}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.getRegex = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CustomInfoType.Regex} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.Regex, 3));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CustomInfoType.Regex|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.prototype.setRegex = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.privacy.dlp.v2.CustomInfoType.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.clearRegex = function() {
  return this.setRegex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.hasRegex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional SurrogateType surrogate_type = 4;
 * @return {?proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.getSurrogateType = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType, 4));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CustomInfoType.SurrogateType|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.prototype.setSurrogateType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.google.privacy.dlp.v2.CustomInfoType.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.clearSurrogateType = function() {
  return this.setSurrogateType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.hasSurrogateType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StoredType stored_type = 5;
 * @return {?proto.google.privacy.dlp.v2.StoredType}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.getStoredType = function() {
  return /** @type{?proto.google.privacy.dlp.v2.StoredType} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.StoredType, 5));
};


/**
 * @param {?proto.google.privacy.dlp.v2.StoredType|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.prototype.setStoredType = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.google.privacy.dlp.v2.CustomInfoType.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.clearStoredType = function() {
  return this.setStoredType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.hasStoredType = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated DetectionRule detection_rules = 7;
 * @return {!Array<!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule>}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.getDetectionRulesList = function() {
  return /** @type{!Array<!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule, 7));
};


/**
 * @param {!Array<!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule>} value
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
*/
proto.google.privacy.dlp.v2.CustomInfoType.prototype.setDetectionRulesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule}
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.addDetectionRules = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.google.privacy.dlp.v2.CustomInfoType.DetectionRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.privacy.dlp.v2.CustomInfoType} returns this
 */
proto.google.privacy.dlp.v2.CustomInfoType.prototype.clearDetectionRulesList = function() {
  return this.setDetectionRulesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.FieldId.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.FieldId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.FieldId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.FieldId.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.FieldId}
 */
proto.google.privacy.dlp.v2.FieldId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.FieldId;
  return proto.google.privacy.dlp.v2.FieldId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.FieldId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.FieldId}
 */
proto.google.privacy.dlp.v2.FieldId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.FieldId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.FieldId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.FieldId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.FieldId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.FieldId.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.FieldId} returns this
 */
proto.google.privacy.dlp.v2.FieldId.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.PartitionId.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.PartitionId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.PartitionId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.PartitionId.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    namespaceId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.PartitionId}
 */
proto.google.privacy.dlp.v2.PartitionId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.PartitionId;
  return proto.google.privacy.dlp.v2.PartitionId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.PartitionId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.PartitionId}
 */
proto.google.privacy.dlp.v2.PartitionId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.PartitionId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.PartitionId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.PartitionId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.PartitionId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNamespaceId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string project_id = 2;
 * @return {string}
 */
proto.google.privacy.dlp.v2.PartitionId.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.PartitionId} returns this
 */
proto.google.privacy.dlp.v2.PartitionId.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string namespace_id = 4;
 * @return {string}
 */
proto.google.privacy.dlp.v2.PartitionId.prototype.getNamespaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.PartitionId} returns this
 */
proto.google.privacy.dlp.v2.PartitionId.prototype.setNamespaceId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.KindExpression.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.KindExpression.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.KindExpression} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.KindExpression.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.KindExpression}
 */
proto.google.privacy.dlp.v2.KindExpression.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.KindExpression;
  return proto.google.privacy.dlp.v2.KindExpression.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.KindExpression} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.KindExpression}
 */
proto.google.privacy.dlp.v2.KindExpression.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.KindExpression.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.KindExpression.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.KindExpression} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.KindExpression.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.KindExpression.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.KindExpression} returns this
 */
proto.google.privacy.dlp.v2.KindExpression.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.DatastoreOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.DatastoreOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.DatastoreOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    partitionId: (f = msg.getPartitionId()) && proto.google.privacy.dlp.v2.PartitionId.toObject(includeInstance, f),
    kind: (f = msg.getKind()) && proto.google.privacy.dlp.v2.KindExpression.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.DatastoreOptions}
 */
proto.google.privacy.dlp.v2.DatastoreOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.DatastoreOptions;
  return proto.google.privacy.dlp.v2.DatastoreOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.DatastoreOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.DatastoreOptions}
 */
proto.google.privacy.dlp.v2.DatastoreOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.PartitionId;
      reader.readMessage(value,proto.google.privacy.dlp.v2.PartitionId.deserializeBinaryFromReader);
      msg.setPartitionId(value);
      break;
    case 2:
      var value = new proto.google.privacy.dlp.v2.KindExpression;
      reader.readMessage(value,proto.google.privacy.dlp.v2.KindExpression.deserializeBinaryFromReader);
      msg.setKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.DatastoreOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.DatastoreOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.DatastoreOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartitionId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.PartitionId.serializeBinaryToWriter
    );
  }
  f = message.getKind();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.privacy.dlp.v2.KindExpression.serializeBinaryToWriter
    );
  }
};


/**
 * optional PartitionId partition_id = 1;
 * @return {?proto.google.privacy.dlp.v2.PartitionId}
 */
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.getPartitionId = function() {
  return /** @type{?proto.google.privacy.dlp.v2.PartitionId} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.PartitionId, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.PartitionId|undefined} value
 * @return {!proto.google.privacy.dlp.v2.DatastoreOptions} returns this
*/
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.setPartitionId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.DatastoreOptions} returns this
 */
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.clearPartitionId = function() {
  return this.setPartitionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.hasPartitionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional KindExpression kind = 2;
 * @return {?proto.google.privacy.dlp.v2.KindExpression}
 */
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.getKind = function() {
  return /** @type{?proto.google.privacy.dlp.v2.KindExpression} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.KindExpression, 2));
};


/**
 * @param {?proto.google.privacy.dlp.v2.KindExpression|undefined} value
 * @return {!proto.google.privacy.dlp.v2.DatastoreOptions} returns this
*/
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.setKind = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.DatastoreOptions} returns this
 */
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.clearKind = function() {
  return this.setKind(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.DatastoreOptions.prototype.hasKind = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CloudStorageOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CloudStorageOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileSet: (f = msg.getFileSet()) && proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.toObject(includeInstance, f),
    bytesLimitPerFile: jspb.Message.getFieldWithDefault(msg, 4, 0),
    bytesLimitPerFilePercent: jspb.Message.getFieldWithDefault(msg, 8, 0),
    fileTypesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    sampleMethod: jspb.Message.getFieldWithDefault(msg, 6, 0),
    filesLimitPercent: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CloudStorageOptions;
  return proto.google.privacy.dlp.v2.CloudStorageOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CloudStorageOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.deserializeBinaryFromReader);
      msg.setFileSet(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBytesLimitPerFile(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBytesLimitPerFilePercent(value);
      break;
    case 5:
      var values = /** @type {!Array<!proto.google.privacy.dlp.v2.FileType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFileTypes(values[i]);
      }
      break;
    case 6:
      var value = /** @type {!proto.google.privacy.dlp.v2.CloudStorageOptions.SampleMethod} */ (reader.readEnum());
      msg.setSampleMethod(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFilesLimitPercent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CloudStorageOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CloudStorageOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileSet();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.serializeBinaryToWriter
    );
  }
  f = message.getBytesLimitPerFile();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getBytesLimitPerFilePercent();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getFileTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
  f = message.getSampleMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getFilesLimitPercent();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.SampleMethod = {
  SAMPLE_METHOD_UNSPECIFIED: 0,
  TOP: 1,
  RANDOM_START: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet;
  return proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional FileSet file_set = 1;
 * @return {?proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.getFileSet = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CloudStorageOptions.FileSet|undefined} value
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
*/
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.setFileSet = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.clearFileSet = function() {
  return this.setFileSet(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.hasFileSet = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 bytes_limit_per_file = 4;
 * @return {number}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.getBytesLimitPerFile = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.setBytesLimitPerFile = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 bytes_limit_per_file_percent = 8;
 * @return {number}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.getBytesLimitPerFilePercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.setBytesLimitPerFilePercent = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated FileType file_types = 5;
 * @return {!Array<!proto.google.privacy.dlp.v2.FileType>}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.getFileTypesList = function() {
  return /** @type {!Array<!proto.google.privacy.dlp.v2.FileType>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<!proto.google.privacy.dlp.v2.FileType>} value
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.setFileTypesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.google.privacy.dlp.v2.FileType} value
 * @param {number=} opt_index
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.addFileTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.clearFileTypesList = function() {
  return this.setFileTypesList([]);
};


/**
 * optional SampleMethod sample_method = 6;
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions.SampleMethod}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.getSampleMethod = function() {
  return /** @type {!proto.google.privacy.dlp.v2.CloudStorageOptions.SampleMethod} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.google.privacy.dlp.v2.CloudStorageOptions.SampleMethod} value
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.setSampleMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int32 files_limit_percent = 7;
 * @return {number}
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.getFilesLimitPercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.CloudStorageOptions} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageOptions.prototype.setFilesLimitPercent = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CloudStorageFileSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CloudStorageFileSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CloudStorageFileSet}
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CloudStorageFileSet;
  return proto.google.privacy.dlp.v2.CloudStorageFileSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CloudStorageFileSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CloudStorageFileSet}
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CloudStorageFileSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CloudStorageFileSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.CloudStorageFileSet} returns this
 */
proto.google.privacy.dlp.v2.CloudStorageFileSet.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.CloudStoragePath.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.CloudStoragePath.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.CloudStoragePath} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CloudStoragePath.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.CloudStoragePath}
 */
proto.google.privacy.dlp.v2.CloudStoragePath.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.CloudStoragePath;
  return proto.google.privacy.dlp.v2.CloudStoragePath.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.CloudStoragePath} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.CloudStoragePath}
 */
proto.google.privacy.dlp.v2.CloudStoragePath.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.CloudStoragePath.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.CloudStoragePath.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.CloudStoragePath} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.CloudStoragePath.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.CloudStoragePath.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.CloudStoragePath} returns this
 */
proto.google.privacy.dlp.v2.CloudStoragePath.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.privacy.dlp.v2.BigQueryOptions.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.BigQueryOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.BigQueryOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.BigQueryOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableReference: (f = msg.getTableReference()) && proto.google.privacy.dlp.v2.BigQueryTable.toObject(includeInstance, f),
    identifyingFieldsList: jspb.Message.toObjectList(msg.getIdentifyingFieldsList(),
    proto.google.privacy.dlp.v2.FieldId.toObject, includeInstance),
    rowsLimit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    rowsLimitPercent: jspb.Message.getFieldWithDefault(msg, 6, 0),
    sampleMethod: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.BigQueryOptions;
  return proto.google.privacy.dlp.v2.BigQueryOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.BigQueryOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.BigQueryTable;
      reader.readMessage(value,proto.google.privacy.dlp.v2.BigQueryTable.deserializeBinaryFromReader);
      msg.setTableReference(value);
      break;
    case 2:
      var value = new proto.google.privacy.dlp.v2.FieldId;
      reader.readMessage(value,proto.google.privacy.dlp.v2.FieldId.deserializeBinaryFromReader);
      msg.addIdentifyingFields(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRowsLimit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRowsLimitPercent(value);
      break;
    case 4:
      var value = /** @type {!proto.google.privacy.dlp.v2.BigQueryOptions.SampleMethod} */ (reader.readEnum());
      msg.setSampleMethod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.BigQueryOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.BigQueryOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.BigQueryOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableReference();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.BigQueryTable.serializeBinaryToWriter
    );
  }
  f = message.getIdentifyingFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.privacy.dlp.v2.FieldId.serializeBinaryToWriter
    );
  }
  f = message.getRowsLimit();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getRowsLimitPercent();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getSampleMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.SampleMethod = {
  SAMPLE_METHOD_UNSPECIFIED: 0,
  TOP: 1,
  RANDOM_START: 2
};

/**
 * optional BigQueryTable table_reference = 1;
 * @return {?proto.google.privacy.dlp.v2.BigQueryTable}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.getTableReference = function() {
  return /** @type{?proto.google.privacy.dlp.v2.BigQueryTable} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.BigQueryTable, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.BigQueryTable|undefined} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions} returns this
*/
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.setTableReference = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions} returns this
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.clearTableReference = function() {
  return this.setTableReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.hasTableReference = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated FieldId identifying_fields = 2;
 * @return {!Array<!proto.google.privacy.dlp.v2.FieldId>}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.getIdentifyingFieldsList = function() {
  return /** @type{!Array<!proto.google.privacy.dlp.v2.FieldId>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.privacy.dlp.v2.FieldId, 2));
};


/**
 * @param {!Array<!proto.google.privacy.dlp.v2.FieldId>} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions} returns this
*/
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.setIdentifyingFieldsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.privacy.dlp.v2.FieldId=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.privacy.dlp.v2.FieldId}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.addIdentifyingFields = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.privacy.dlp.v2.FieldId, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions} returns this
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.clearIdentifyingFieldsList = function() {
  return this.setIdentifyingFieldsList([]);
};


/**
 * optional int64 rows_limit = 3;
 * @return {number}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.getRowsLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions} returns this
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.setRowsLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 rows_limit_percent = 6;
 * @return {number}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.getRowsLimitPercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions} returns this
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.setRowsLimitPercent = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional SampleMethod sample_method = 4;
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions.SampleMethod}
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.getSampleMethod = function() {
  return /** @type {!proto.google.privacy.dlp.v2.BigQueryOptions.SampleMethod} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.google.privacy.dlp.v2.BigQueryOptions.SampleMethod} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryOptions} returns this
 */
proto.google.privacy.dlp.v2.BigQueryOptions.prototype.setSampleMethod = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.privacy.dlp.v2.StorageConfig.oneofGroups_ = [[2,3,4]];

/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.StorageConfig.TypeCase = {
  TYPE_NOT_SET: 0,
  DATASTORE_OPTIONS: 2,
  CLOUD_STORAGE_OPTIONS: 3,
  BIG_QUERY_OPTIONS: 4
};

/**
 * @return {proto.google.privacy.dlp.v2.StorageConfig.TypeCase}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.getTypeCase = function() {
  return /** @type {proto.google.privacy.dlp.v2.StorageConfig.TypeCase} */(jspb.Message.computeOneofCase(this, proto.google.privacy.dlp.v2.StorageConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.StorageConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.StorageConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.StorageConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    datastoreOptions: (f = msg.getDatastoreOptions()) && proto.google.privacy.dlp.v2.DatastoreOptions.toObject(includeInstance, f),
    cloudStorageOptions: (f = msg.getCloudStorageOptions()) && proto.google.privacy.dlp.v2.CloudStorageOptions.toObject(includeInstance, f),
    bigQueryOptions: (f = msg.getBigQueryOptions()) && proto.google.privacy.dlp.v2.BigQueryOptions.toObject(includeInstance, f),
    timespanConfig: (f = msg.getTimespanConfig()) && proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig}
 */
proto.google.privacy.dlp.v2.StorageConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.StorageConfig;
  return proto.google.privacy.dlp.v2.StorageConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.StorageConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig}
 */
proto.google.privacy.dlp.v2.StorageConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.google.privacy.dlp.v2.DatastoreOptions;
      reader.readMessage(value,proto.google.privacy.dlp.v2.DatastoreOptions.deserializeBinaryFromReader);
      msg.setDatastoreOptions(value);
      break;
    case 3:
      var value = new proto.google.privacy.dlp.v2.CloudStorageOptions;
      reader.readMessage(value,proto.google.privacy.dlp.v2.CloudStorageOptions.deserializeBinaryFromReader);
      msg.setCloudStorageOptions(value);
      break;
    case 4:
      var value = new proto.google.privacy.dlp.v2.BigQueryOptions;
      reader.readMessage(value,proto.google.privacy.dlp.v2.BigQueryOptions.deserializeBinaryFromReader);
      msg.setBigQueryOptions(value);
      break;
    case 6:
      var value = new proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig;
      reader.readMessage(value,proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.deserializeBinaryFromReader);
      msg.setTimespanConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.StorageConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.StorageConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.StorageConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatastoreOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.privacy.dlp.v2.DatastoreOptions.serializeBinaryToWriter
    );
  }
  f = message.getCloudStorageOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.privacy.dlp.v2.CloudStorageOptions.serializeBinaryToWriter
    );
  }
  f = message.getBigQueryOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.privacy.dlp.v2.BigQueryOptions.serializeBinaryToWriter
    );
  }
  f = message.getTimespanConfig();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    timestampField: (f = msg.getTimestampField()) && proto.google.privacy.dlp.v2.FieldId.toObject(includeInstance, f),
    enableAutoPopulationOfTimespanConfig: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig;
  return proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = new proto.google.privacy.dlp.v2.FieldId;
      reader.readMessage(value,proto.google.privacy.dlp.v2.FieldId.deserializeBinaryFromReader);
      msg.setTimestampField(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableAutoPopulationOfTimespanConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTimestampField();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.privacy.dlp.v2.FieldId.serializeBinaryToWriter
    );
  }
  f = message.getEnableAutoPopulationOfTimespanConfig();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} returns this
*/
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} returns this
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} returns this
*/
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} returns this
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional FieldId timestamp_field = 3;
 * @return {?proto.google.privacy.dlp.v2.FieldId}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.getTimestampField = function() {
  return /** @type{?proto.google.privacy.dlp.v2.FieldId} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.FieldId, 3));
};


/**
 * @param {?proto.google.privacy.dlp.v2.FieldId|undefined} value
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} returns this
*/
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.setTimestampField = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} returns this
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.clearTimestampField = function() {
  return this.setTimestampField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.hasTimestampField = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_auto_population_of_timespan_config = 4;
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.getEnableAutoPopulationOfTimespanConfig = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} returns this
 */
proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig.prototype.setEnableAutoPopulationOfTimespanConfig = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional DatastoreOptions datastore_options = 2;
 * @return {?proto.google.privacy.dlp.v2.DatastoreOptions}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.getDatastoreOptions = function() {
  return /** @type{?proto.google.privacy.dlp.v2.DatastoreOptions} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.DatastoreOptions, 2));
};


/**
 * @param {?proto.google.privacy.dlp.v2.DatastoreOptions|undefined} value
 * @return {!proto.google.privacy.dlp.v2.StorageConfig} returns this
*/
proto.google.privacy.dlp.v2.StorageConfig.prototype.setDatastoreOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.privacy.dlp.v2.StorageConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig} returns this
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.clearDatastoreOptions = function() {
  return this.setDatastoreOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.hasDatastoreOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional CloudStorageOptions cloud_storage_options = 3;
 * @return {?proto.google.privacy.dlp.v2.CloudStorageOptions}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.getCloudStorageOptions = function() {
  return /** @type{?proto.google.privacy.dlp.v2.CloudStorageOptions} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.CloudStorageOptions, 3));
};


/**
 * @param {?proto.google.privacy.dlp.v2.CloudStorageOptions|undefined} value
 * @return {!proto.google.privacy.dlp.v2.StorageConfig} returns this
*/
proto.google.privacy.dlp.v2.StorageConfig.prototype.setCloudStorageOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.privacy.dlp.v2.StorageConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig} returns this
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.clearCloudStorageOptions = function() {
  return this.setCloudStorageOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.hasCloudStorageOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional BigQueryOptions big_query_options = 4;
 * @return {?proto.google.privacy.dlp.v2.BigQueryOptions}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.getBigQueryOptions = function() {
  return /** @type{?proto.google.privacy.dlp.v2.BigQueryOptions} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.BigQueryOptions, 4));
};


/**
 * @param {?proto.google.privacy.dlp.v2.BigQueryOptions|undefined} value
 * @return {!proto.google.privacy.dlp.v2.StorageConfig} returns this
*/
proto.google.privacy.dlp.v2.StorageConfig.prototype.setBigQueryOptions = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.google.privacy.dlp.v2.StorageConfig.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig} returns this
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.clearBigQueryOptions = function() {
  return this.setBigQueryOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.hasBigQueryOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional TimespanConfig timespan_config = 6;
 * @return {?proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.getTimespanConfig = function() {
  return /** @type{?proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig, 6));
};


/**
 * @param {?proto.google.privacy.dlp.v2.StorageConfig.TimespanConfig|undefined} value
 * @return {!proto.google.privacy.dlp.v2.StorageConfig} returns this
*/
proto.google.privacy.dlp.v2.StorageConfig.prototype.setTimespanConfig = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.StorageConfig} returns this
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.clearTimespanConfig = function() {
  return this.setTimespanConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.StorageConfig.prototype.hasTimespanConfig = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.BigQueryKey.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.BigQueryKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.BigQueryKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.BigQueryKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableReference: (f = msg.getTableReference()) && proto.google.privacy.dlp.v2.BigQueryTable.toObject(includeInstance, f),
    rowNumber: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.BigQueryKey}
 */
proto.google.privacy.dlp.v2.BigQueryKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.BigQueryKey;
  return proto.google.privacy.dlp.v2.BigQueryKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.BigQueryKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.BigQueryKey}
 */
proto.google.privacy.dlp.v2.BigQueryKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.BigQueryTable;
      reader.readMessage(value,proto.google.privacy.dlp.v2.BigQueryTable.deserializeBinaryFromReader);
      msg.setTableReference(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRowNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.BigQueryKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.BigQueryKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.BigQueryKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.BigQueryKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableReference();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.BigQueryTable.serializeBinaryToWriter
    );
  }
  f = message.getRowNumber();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional BigQueryTable table_reference = 1;
 * @return {?proto.google.privacy.dlp.v2.BigQueryTable}
 */
proto.google.privacy.dlp.v2.BigQueryKey.prototype.getTableReference = function() {
  return /** @type{?proto.google.privacy.dlp.v2.BigQueryTable} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.BigQueryTable, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.BigQueryTable|undefined} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryKey} returns this
*/
proto.google.privacy.dlp.v2.BigQueryKey.prototype.setTableReference = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.BigQueryKey} returns this
 */
proto.google.privacy.dlp.v2.BigQueryKey.prototype.clearTableReference = function() {
  return this.setTableReference(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.BigQueryKey.prototype.hasTableReference = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 row_number = 2;
 * @return {number}
 */
proto.google.privacy.dlp.v2.BigQueryKey.prototype.getRowNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryKey} returns this
 */
proto.google.privacy.dlp.v2.BigQueryKey.prototype.setRowNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.DatastoreKey.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.DatastoreKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.DatastoreKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.DatastoreKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityKey: (f = msg.getEntityKey()) && proto.google.privacy.dlp.v2.Key.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.DatastoreKey}
 */
proto.google.privacy.dlp.v2.DatastoreKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.DatastoreKey;
  return proto.google.privacy.dlp.v2.DatastoreKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.DatastoreKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.DatastoreKey}
 */
proto.google.privacy.dlp.v2.DatastoreKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.Key;
      reader.readMessage(value,proto.google.privacy.dlp.v2.Key.deserializeBinaryFromReader);
      msg.setEntityKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.DatastoreKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.DatastoreKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.DatastoreKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.DatastoreKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.Key.serializeBinaryToWriter
    );
  }
};


/**
 * optional Key entity_key = 1;
 * @return {?proto.google.privacy.dlp.v2.Key}
 */
proto.google.privacy.dlp.v2.DatastoreKey.prototype.getEntityKey = function() {
  return /** @type{?proto.google.privacy.dlp.v2.Key} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.Key, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.Key|undefined} value
 * @return {!proto.google.privacy.dlp.v2.DatastoreKey} returns this
*/
proto.google.privacy.dlp.v2.DatastoreKey.prototype.setEntityKey = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.DatastoreKey} returns this
 */
proto.google.privacy.dlp.v2.DatastoreKey.prototype.clearEntityKey = function() {
  return this.setEntityKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.DatastoreKey.prototype.hasEntityKey = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.privacy.dlp.v2.Key.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.Key.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.Key.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.Key} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.Key.toObject = function(includeInstance, msg) {
  var f, obj = {
    partitionId: (f = msg.getPartitionId()) && proto.google.privacy.dlp.v2.PartitionId.toObject(includeInstance, f),
    pathList: jspb.Message.toObjectList(msg.getPathList(),
    proto.google.privacy.dlp.v2.Key.PathElement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.Key}
 */
proto.google.privacy.dlp.v2.Key.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.Key;
  return proto.google.privacy.dlp.v2.Key.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.Key} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.Key}
 */
proto.google.privacy.dlp.v2.Key.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.PartitionId;
      reader.readMessage(value,proto.google.privacy.dlp.v2.PartitionId.deserializeBinaryFromReader);
      msg.setPartitionId(value);
      break;
    case 2:
      var value = new proto.google.privacy.dlp.v2.Key.PathElement;
      reader.readMessage(value,proto.google.privacy.dlp.v2.Key.PathElement.deserializeBinaryFromReader);
      msg.addPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.Key.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.Key.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.Key} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.Key.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartitionId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.PartitionId.serializeBinaryToWriter
    );
  }
  f = message.getPathList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.privacy.dlp.v2.Key.PathElement.serializeBinaryToWriter
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.privacy.dlp.v2.Key.PathElement.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.Key.PathElement.IdTypeCase = {
  ID_TYPE_NOT_SET: 0,
  ID: 2,
  NAME: 3
};

/**
 * @return {proto.google.privacy.dlp.v2.Key.PathElement.IdTypeCase}
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.getIdTypeCase = function() {
  return /** @type {proto.google.privacy.dlp.v2.Key.PathElement.IdTypeCase} */(jspb.Message.computeOneofCase(this, proto.google.privacy.dlp.v2.Key.PathElement.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.Key.PathElement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.Key.PathElement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.Key.PathElement.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.Key.PathElement}
 */
proto.google.privacy.dlp.v2.Key.PathElement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.Key.PathElement;
  return proto.google.privacy.dlp.v2.Key.PathElement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.Key.PathElement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.Key.PathElement}
 */
proto.google.privacy.dlp.v2.Key.PathElement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.Key.PathElement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.Key.PathElement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.Key.PathElement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.Key.PathElement} returns this
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.setKind = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int64 id = 2;
 * @return {number}
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.privacy.dlp.v2.Key.PathElement} returns this
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.setId = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.google.privacy.dlp.v2.Key.PathElement.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.Key.PathElement} returns this
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.clearId = function() {
  return jspb.Message.setOneofField(this, 2, proto.google.privacy.dlp.v2.Key.PathElement.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.Key.PathElement} returns this
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.setName = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.google.privacy.dlp.v2.Key.PathElement.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.Key.PathElement} returns this
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.clearName = function() {
  return jspb.Message.setOneofField(this, 3, proto.google.privacy.dlp.v2.Key.PathElement.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.Key.PathElement.prototype.hasName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional PartitionId partition_id = 1;
 * @return {?proto.google.privacy.dlp.v2.PartitionId}
 */
proto.google.privacy.dlp.v2.Key.prototype.getPartitionId = function() {
  return /** @type{?proto.google.privacy.dlp.v2.PartitionId} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.PartitionId, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.PartitionId|undefined} value
 * @return {!proto.google.privacy.dlp.v2.Key} returns this
*/
proto.google.privacy.dlp.v2.Key.prototype.setPartitionId = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.Key} returns this
 */
proto.google.privacy.dlp.v2.Key.prototype.clearPartitionId = function() {
  return this.setPartitionId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.Key.prototype.hasPartitionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PathElement path = 2;
 * @return {!Array<!proto.google.privacy.dlp.v2.Key.PathElement>}
 */
proto.google.privacy.dlp.v2.Key.prototype.getPathList = function() {
  return /** @type{!Array<!proto.google.privacy.dlp.v2.Key.PathElement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.privacy.dlp.v2.Key.PathElement, 2));
};


/**
 * @param {!Array<!proto.google.privacy.dlp.v2.Key.PathElement>} value
 * @return {!proto.google.privacy.dlp.v2.Key} returns this
*/
proto.google.privacy.dlp.v2.Key.prototype.setPathList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.privacy.dlp.v2.Key.PathElement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.privacy.dlp.v2.Key.PathElement}
 */
proto.google.privacy.dlp.v2.Key.prototype.addPath = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.privacy.dlp.v2.Key.PathElement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.privacy.dlp.v2.Key} returns this
 */
proto.google.privacy.dlp.v2.Key.prototype.clearPathList = function() {
  return this.setPathList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.privacy.dlp.v2.RecordKey.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.RecordKey.TypeCase = {
  TYPE_NOT_SET: 0,
  DATASTORE_KEY: 2,
  BIG_QUERY_KEY: 3
};

/**
 * @return {proto.google.privacy.dlp.v2.RecordKey.TypeCase}
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.getTypeCase = function() {
  return /** @type {proto.google.privacy.dlp.v2.RecordKey.TypeCase} */(jspb.Message.computeOneofCase(this, proto.google.privacy.dlp.v2.RecordKey.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.RecordKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.RecordKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.RecordKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    datastoreKey: (f = msg.getDatastoreKey()) && proto.google.privacy.dlp.v2.DatastoreKey.toObject(includeInstance, f),
    bigQueryKey: (f = msg.getBigQueryKey()) && proto.google.privacy.dlp.v2.BigQueryKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.RecordKey}
 */
proto.google.privacy.dlp.v2.RecordKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.RecordKey;
  return proto.google.privacy.dlp.v2.RecordKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.RecordKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.RecordKey}
 */
proto.google.privacy.dlp.v2.RecordKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.google.privacy.dlp.v2.DatastoreKey;
      reader.readMessage(value,proto.google.privacy.dlp.v2.DatastoreKey.deserializeBinaryFromReader);
      msg.setDatastoreKey(value);
      break;
    case 3:
      var value = new proto.google.privacy.dlp.v2.BigQueryKey;
      reader.readMessage(value,proto.google.privacy.dlp.v2.BigQueryKey.deserializeBinaryFromReader);
      msg.setBigQueryKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.RecordKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.RecordKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.RecordKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatastoreKey();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.privacy.dlp.v2.DatastoreKey.serializeBinaryToWriter
    );
  }
  f = message.getBigQueryKey();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.privacy.dlp.v2.BigQueryKey.serializeBinaryToWriter
    );
  }
};


/**
 * optional DatastoreKey datastore_key = 2;
 * @return {?proto.google.privacy.dlp.v2.DatastoreKey}
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.getDatastoreKey = function() {
  return /** @type{?proto.google.privacy.dlp.v2.DatastoreKey} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.DatastoreKey, 2));
};


/**
 * @param {?proto.google.privacy.dlp.v2.DatastoreKey|undefined} value
 * @return {!proto.google.privacy.dlp.v2.RecordKey} returns this
*/
proto.google.privacy.dlp.v2.RecordKey.prototype.setDatastoreKey = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.google.privacy.dlp.v2.RecordKey.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.RecordKey} returns this
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.clearDatastoreKey = function() {
  return this.setDatastoreKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.hasDatastoreKey = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BigQueryKey big_query_key = 3;
 * @return {?proto.google.privacy.dlp.v2.BigQueryKey}
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.getBigQueryKey = function() {
  return /** @type{?proto.google.privacy.dlp.v2.BigQueryKey} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.BigQueryKey, 3));
};


/**
 * @param {?proto.google.privacy.dlp.v2.BigQueryKey|undefined} value
 * @return {!proto.google.privacy.dlp.v2.RecordKey} returns this
*/
proto.google.privacy.dlp.v2.RecordKey.prototype.setBigQueryKey = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.google.privacy.dlp.v2.RecordKey.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.RecordKey} returns this
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.clearBigQueryKey = function() {
  return this.setBigQueryKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.RecordKey.prototype.hasBigQueryKey = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.BigQueryTable.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.BigQueryTable.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.BigQueryTable} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.BigQueryTable.toObject = function(includeInstance, msg) {
  var f, obj = {
    projectId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    datasetId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tableId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.BigQueryTable}
 */
proto.google.privacy.dlp.v2.BigQueryTable.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.BigQueryTable;
  return proto.google.privacy.dlp.v2.BigQueryTable.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.BigQueryTable} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.BigQueryTable}
 */
proto.google.privacy.dlp.v2.BigQueryTable.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatasetId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTableId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.BigQueryTable.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.BigQueryTable.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.BigQueryTable} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.BigQueryTable.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDatasetId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTableId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string project_id = 1;
 * @return {string}
 */
proto.google.privacy.dlp.v2.BigQueryTable.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryTable} returns this
 */
proto.google.privacy.dlp.v2.BigQueryTable.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string dataset_id = 2;
 * @return {string}
 */
proto.google.privacy.dlp.v2.BigQueryTable.prototype.getDatasetId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryTable} returns this
 */
proto.google.privacy.dlp.v2.BigQueryTable.prototype.setDatasetId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string table_id = 3;
 * @return {string}
 */
proto.google.privacy.dlp.v2.BigQueryTable.prototype.getTableId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryTable} returns this
 */
proto.google.privacy.dlp.v2.BigQueryTable.prototype.setTableId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.BigQueryField.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.BigQueryField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.BigQueryField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.BigQueryField.toObject = function(includeInstance, msg) {
  var f, obj = {
    table: (f = msg.getTable()) && proto.google.privacy.dlp.v2.BigQueryTable.toObject(includeInstance, f),
    field: (f = msg.getField()) && proto.google.privacy.dlp.v2.FieldId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.BigQueryField}
 */
proto.google.privacy.dlp.v2.BigQueryField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.BigQueryField;
  return proto.google.privacy.dlp.v2.BigQueryField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.BigQueryField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.BigQueryField}
 */
proto.google.privacy.dlp.v2.BigQueryField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.BigQueryTable;
      reader.readMessage(value,proto.google.privacy.dlp.v2.BigQueryTable.deserializeBinaryFromReader);
      msg.setTable(value);
      break;
    case 2:
      var value = new proto.google.privacy.dlp.v2.FieldId;
      reader.readMessage(value,proto.google.privacy.dlp.v2.FieldId.deserializeBinaryFromReader);
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.BigQueryField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.BigQueryField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.BigQueryField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.BigQueryField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTable();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.BigQueryTable.serializeBinaryToWriter
    );
  }
  f = message.getField();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.privacy.dlp.v2.FieldId.serializeBinaryToWriter
    );
  }
};


/**
 * optional BigQueryTable table = 1;
 * @return {?proto.google.privacy.dlp.v2.BigQueryTable}
 */
proto.google.privacy.dlp.v2.BigQueryField.prototype.getTable = function() {
  return /** @type{?proto.google.privacy.dlp.v2.BigQueryTable} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.BigQueryTable, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.BigQueryTable|undefined} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryField} returns this
*/
proto.google.privacy.dlp.v2.BigQueryField.prototype.setTable = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.BigQueryField} returns this
 */
proto.google.privacy.dlp.v2.BigQueryField.prototype.clearTable = function() {
  return this.setTable(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.BigQueryField.prototype.hasTable = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FieldId field = 2;
 * @return {?proto.google.privacy.dlp.v2.FieldId}
 */
proto.google.privacy.dlp.v2.BigQueryField.prototype.getField = function() {
  return /** @type{?proto.google.privacy.dlp.v2.FieldId} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.FieldId, 2));
};


/**
 * @param {?proto.google.privacy.dlp.v2.FieldId|undefined} value
 * @return {!proto.google.privacy.dlp.v2.BigQueryField} returns this
*/
proto.google.privacy.dlp.v2.BigQueryField.prototype.setField = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.BigQueryField} returns this
 */
proto.google.privacy.dlp.v2.BigQueryField.prototype.clearField = function() {
  return this.setField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.BigQueryField.prototype.hasField = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.privacy.dlp.v2.EntityId.prototype.toObject = function(opt_includeInstance) {
  return proto.google.privacy.dlp.v2.EntityId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.privacy.dlp.v2.EntityId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.EntityId.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: (f = msg.getField()) && proto.google.privacy.dlp.v2.FieldId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.privacy.dlp.v2.EntityId}
 */
proto.google.privacy.dlp.v2.EntityId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.privacy.dlp.v2.EntityId;
  return proto.google.privacy.dlp.v2.EntityId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.privacy.dlp.v2.EntityId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.privacy.dlp.v2.EntityId}
 */
proto.google.privacy.dlp.v2.EntityId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.privacy.dlp.v2.FieldId;
      reader.readMessage(value,proto.google.privacy.dlp.v2.FieldId.deserializeBinaryFromReader);
      msg.setField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.privacy.dlp.v2.EntityId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.privacy.dlp.v2.EntityId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.privacy.dlp.v2.EntityId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.privacy.dlp.v2.EntityId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.privacy.dlp.v2.FieldId.serializeBinaryToWriter
    );
  }
};


/**
 * optional FieldId field = 1;
 * @return {?proto.google.privacy.dlp.v2.FieldId}
 */
proto.google.privacy.dlp.v2.EntityId.prototype.getField = function() {
  return /** @type{?proto.google.privacy.dlp.v2.FieldId} */ (
    jspb.Message.getWrapperField(this, proto.google.privacy.dlp.v2.FieldId, 1));
};


/**
 * @param {?proto.google.privacy.dlp.v2.FieldId|undefined} value
 * @return {!proto.google.privacy.dlp.v2.EntityId} returns this
*/
proto.google.privacy.dlp.v2.EntityId.prototype.setField = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.privacy.dlp.v2.EntityId} returns this
 */
proto.google.privacy.dlp.v2.EntityId.prototype.clearField = function() {
  return this.setField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.privacy.dlp.v2.EntityId.prototype.hasField = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.Likelihood = {
  LIKELIHOOD_UNSPECIFIED: 0,
  VERY_UNLIKELY: 1,
  UNLIKELY: 2,
  POSSIBLE: 3,
  LIKELY: 4,
  VERY_LIKELY: 5
};

/**
 * @enum {number}
 */
proto.google.privacy.dlp.v2.FileType = {
  FILE_TYPE_UNSPECIFIED: 0,
  BINARY_FILE: 1,
  TEXT_FILE: 2
};

goog.object.extend(exports, proto.google.privacy.dlp.v2);
